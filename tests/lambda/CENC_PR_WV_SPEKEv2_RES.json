{
  "isBase64Encoded": true,
  "statusCode": 200,
  "headers": {
    "X-Speke-Version": "2.0",
    "X-Speke-User-Agent": "SPEKE Lambda BE 1",
    "Content-Type": "application/xml"
  },
  "body": ""
}